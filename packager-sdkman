#!/usr/bin/env bash

. ${os_toolkit_import:?}

function ensure_sdkman() {
	_sdkman_path="$HOME/.sdkman/bin/sdkman-init.sh"
	[[ -f $_sdkman_path ]] && . "$_sdkman_path"

	if ! declare -f sdk >/dev/null; then
		if [[ ! -f "$_sdkman_path" ]]; then
			curl -s "https://get.sdkman.io" | bash
		fi
		source "$_sdkman_path"
	fi
}

case $1 in
enabled)
	hash curl 2>/dev/null || (
		echo "'curl' is not installed."
		exit 1
	)
	hash zip 2>/dev/null || (
		echo "'zip' is not installed."
		exit 1
	)
	hash unzip 2>/dev/null || (
		echo "'unzip' is not installed."
		exit 1
	)
	;;
name)
	echo -en "Software Development Kit Manager"
	;;
install)
	shift
	ensure_sdkman
	os_info run "source $_sdkman_path && sdk install $*"
	;;
upgrade)
	shift
	ensure_sdkman
	os_info run "source $_sdkman_path && sdk update"
	os_info run "source $_sdkman_path && sdk upgrade $*"
	os_info run "source $_sdkman_path && sdk selfupdate"
	;;
purge)
	shift
	os_info run "source $_sdkman_path && sdk uninstall $*"
	;;
remove)
	shift
	os_info run "source $_sdkman_path && sdk uninstall $*"
	;;
search)
	shift
	os_info run "source $_sdkman_path && sdk list $*"
	;;
*)
	os_info "Invalid command '$1'."
	exit 2
	;;
esac
